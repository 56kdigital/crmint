{
  "params": [],
  "jobs": [
    {
      "hash_start_conditions": [],
      "worker_class": "BQQueryLauncher",
      "params": [
        {
          "description": null,
          "value": "With GaSubset AS (\n  SELECT \n    distinct \n      date, \n      Hits.transaction.transactionId AS ORDER_ID,\n      fullVisitorId AS fullVisitorId\n  FROM \n    `{% BQ_GA_PROJECT_ID %}.{% BQ_GA_DATASET_ID %}.ga_sessions_*` AS GADATA, \n    GADATA.hits AS Hits\n),\nGaStats AS (\n  SELECT \n    MIN(date) AS min_date_ga,\n    MAX(date) AS max_date_ga,\n    COUNT(DISTINCT order_id) AS distinct_ga_transaction_ids\n  FROM GaSubset\n),\nErpSubset AS (\n  SELECT DISTINCT\n     ORDER_DATE AS ORDER_DATE,\n     ORDER_ID AS ORDER_ID,\n     CUSTOMER_ID\n  FROM `{% BQ_PROJECT_ID %}.{% BQ_ERP_DATASET_ID %}.{% BQ_ERPTABLE_ID %}`\n),\nErpStats AS (\nSELECT \n  MIN(ORDER_DATE) AS min_date_erp,\n  MAX(ORDER_DATE) AS max_date_erp,\n  COUNT(DISTINCT ORDER_ID) AS distinct_erp_order_ids\nFROM ErpSubset\n), \nErpMatchRates AS (\n  SELECT \n    COUNT(*) AS not_matched_erp_ids_in_ga\n  FROM ErpSubset AS ERP\n  LEFT JOIN GaSubset AS GA\n  USING (ORDER_ID)\n  WHERE GA.ORDER_ID IS NULL\n),\nGaMatchRates AS (\n  SELECT \n    COUNT(*) AS not_matched_ga_ids_in_erp\n  FROM GaSubset AS GA\n  LEFT JOIN ErpSubset AS ERP\n  USING (ORDER_ID)\n  WHERE ERP.ORDER_ID IS NULL\n),\nCustomerIds AS (\nSELECT\n  COUNT(DISTINCT CUSTOMER_ID) AS distinct_customer_ids,\n  fullVisitorId \nFROM GaSubset AS GADATA\nJOIN\n  ErpSubset AS ERPDATA\n  USING(ORDER_ID)\nGROUP BY fullVisitorId\n),\nCustomerIdCounts AS (\n SELECT \n   distinct_customer_ids, \n   COUNT(distinct_customer_ids) AS cookie_counts\n FROM \n   CustomerIds\n GROUP BY \n   distinct_customer_ids\n ORDER BY \n   1 DESC\n),\nMaxCustomersPerCookie AS (\n  SELECT \n    max(distinct_customer_ids) AS recommended_max_customers_per_cookie\n  FROM CustomerIdCounts\n  WHERE cookie_counts > 10\n)\nSELECT \n  distinct_erp_order_ids, \n  distinct_ga_transaction_ids, \n  ROUND(\n  ((distinct_erp_order_ids - not_matched_erp_ids_in_ga) / \n      distinct_erp_order_ids) * 100,\n    2) AS erp_ga_match_rate,\n  ROUND(\n    ((distinct_ga_transaction_ids - not_matched_ga_ids_in_erp) / \n      distinct_ga_transaction_ids) * 100,\n    2) AS ga_erp_match_rate,\n  min_date_erp, \n  min_date_ga,\n  max_date_erp, \n  max_date_ga,\n  recommended_max_customers_per_cookie\nFROM \n  ErpStats, \n  ErpMatchRates,\n  GaMatchRates,\n  GaStats,\n  MaxCustomersPerCookie",
          "label": "Query",
          "is_required": false,
          "type": "sql",
          "name": "query"
        },
        {
          "description": null,
          "value": "{% BQ_PROJECT_ID %}",
          "label": "BQ Project ID",
          "is_required": false,
          "type": "string",
          "name": "bq_project_id"
        },
        {
          "description": null,
          "value": "{% BQ_DATASET_ID %}",
          "label": "BQ Dataset ID",
          "is_required": false,
          "type": "string",
          "name": "bq_dataset_id"
        },
        {
          "description": null,
          "value": "ga_erp_checks",
          "label": "BQ Table ID",
          "is_required": false,
          "type": "string",
          "name": "bq_table_id"
        },
        {
          "description": null,
          "value": true,
          "label": "Overwrite table",
          "is_required": false,
          "type": "boolean",
          "name": "overwrite"
        }
      ],
      "id": "7720597977f640bfbf62720bd320206d",
      "name": "Check GA ERP data"
    },
    {
      "hash_start_conditions": [],
      "worker_class": "BQQueryLauncher",
      "params": [
        {
          "description": null,
          "value": "WITH McSubset AS (\n  SELECT \n    DISTINCT \n      mpn AS PRODUCT_ID\n  FROM \n    `{% BQ_PROJECT_ID %}.{% BQ_MC_DATASET_ID %}.{% BQ_MCTABLE_ID %}` \n      AS MCDATA\n),\nMcStats AS (\n  SELECT \n    COUNT(DISTINCT product_id) AS distinct_mc_product_ids\n  FROM McSubset\n),\nErpSubset AS (\n  SELECT DISTINCT\n     ORDER_DATE,\n     ORDER_ID AS ORDER_ID,\n     CUSTOMER_ID,\n     PRODUCT_ID\n  FROM `{% BQ_PROJECT_ID %}.{% BQ_ERP_DATASET_ID %}.{% BQ_ERPTABLE_ID %}`\n),\nErpStats AS (\nSELECT \n  COUNT(DISTINCT PRODUCT_ID) AS distinct_erp_product_ids\nFROM ErpSubset\n), \nErpMatchRates AS (\n  SELECT \n    COUNT(DISTINCT ERP.PRODUCT_ID) AS not_matched_erp_ids_in_mc\n  FROM \n    ErpSubset AS ERP\n    LEFT JOIN McSubset AS MC\n    USING (PRODUCT_ID)\n  WHERE \n    MC.PRODUCT_ID IS NULL\n),\nMcMatchRates AS (\n  SELECT \n    COUNT(DISTINCT MC.PRODUCT_ID) AS not_matched_mc_ids_in_erp\n  FROM \n    McSubset AS MC\n    LEFT JOIN ErpSubset AS ERP\n    USING (PRODUCT_ID)\n  WHERE \n    ERP.PRODUCT_ID IS NULL\n),\nErpChecks AS (\n  SELECT \n      CUSTOMER_ID, \n      ORDER_ID, \n      PRODUCT_ID,\n      COUNT(*) AS duplicate_keys\n  FROM ErpSubset\n  GROUP BY 1,2,3\n),\nCountDuplicateKeys AS (\nSELECT \n  COUNT(*) AS count_duplicate_keys\nFROM ErpChecks \nWHERE duplicate_keys >= 2\n),\nErpCounts AS (\n  SELECT \n    COUNTIF(ABS(RETURN_QUANTITY) > QUANTITY) \n      AS count_orders_with_return_quantity_gt_quantity,\n    COUNTIF(QUANTITY > 100) \n      AS count_orders_with_large_quantites\n  FROM \n    `{% BQ_PROJECT_ID %}.{% BQ_ERP_DATASET_ID %}.{% BQ_ERPTABLE_ID %}`\n\n\n)\nSELECT \n  distinct_erp_product_ids, distinct_mc_product_ids, \n  not_matched_erp_ids_in_mc, not_matched_mc_ids_in_erp,\n  ROUND(((distinct_erp_product_ids - not_matched_erp_ids_in_mc) / \n      distinct_erp_product_ids) * 100, 2) AS erp_mc_match_rate,\n  ROUND(((distinct_mc_product_ids - not_matched_mc_ids_in_erp) / \n      distinct_mc_product_ids) * 100, 2) AS mc_erp_match_rate,\n  count_duplicate_keys,\n  count_orders_with_return_quantity_gt_quantity,\n  count_orders_with_large_quantites\nFROM \n  ErpStats, \n  ErpMatchRates,\n  McMatchRates,\n  McStats,\n  CountDuplicateKeys,\n  ErpCounts",
          "label": "Query",
          "is_required": false,
          "type": "sql",
          "name": "query"
        },
        {
          "description": null,
          "value": "{% BQ_PROJECT_ID %}",
          "label": "BQ Project ID",
          "is_required": false,
          "type": "string",
          "name": "bq_project_id"
        },
        {
          "description": null,
          "value": "{% BQ_DATASET_ID %}",
          "label": "BQ Dataset ID",
          "is_required": false,
          "type": "string",
          "name": "bq_dataset_id"
        },
        {
          "description": null,
          "value": "mc_erp_checks",
          "label": "BQ Table ID",
          "is_required": false,
          "type": "string",
          "name": "bq_table_id"
        },
        {
          "description": null,
          "value": true,
          "label": "Overwrite table",
          "is_required": false,
          "type": "boolean",
          "name": "overwrite"
        }
      ],
      "id": "40bbc956ad8047c489a2011e9aad8a53",
      "name": "Check MC ERP data"
    }
  ],
  "name": "Data Assessment Pipeline",
  "schedules": []
}